7C00:0000 | EB XX ; JMP start
                  ; 
                  ; int_ff:
7C00:0002 | 58    ;    POP AX
7C00:0003 | 58    ;    POP AX
7C00:0004 | 58    ;    POP AX
7C00:0005 | EB XX ;    JMP main_loop
                  ;    
                  ; char2nyb:
7C00:0007 | 88 C4 ;    MOV AH, AL  
7C00:0009 | 3C 30 ;    CMP AL, 0x30
7C00:000B | 7C XX ;    JL  c2n_fail
7C00:000D | 2C 30 ;    SUB AL, 0x30
7C00:000F | 3C 09 ;    CMP AL, 0x09
7C00:0011 | 7F XX ;    JG  c2n_af
7C00:0013 | 32 E4 ;    XOR AH, AH 
7C00:0015 | C3    ;    RET
                  ; c2n_af:
7C00:0016 | 3C 31 ;    CMP AL, 0x31
7C00:0018 | 7C XX ;    JL c2n_fail
7C00:001A | 2C 27 ;    SUB AL, 0x27
7C00:001C | 3C 0F ;    CMP AL, 0x0F
7C00:001E | 7F XX ;    JG c2n_fail
7C00:0020 | 32 E4 ;    XOR AH, AH 
7C00:0022 | C3    ;    RET 
                  ; c2n_fail:
7C00:0023 | 88 E0 ;    MOV AL, AH 
7C00:0025 | B4 01 ;    MOV AH, 0x01
7C00:0027 | C3    ;    RET 
                  ;    
                  ; start:
7C00:0028 |       ;                  
7C00:00 |  ;    XOR ES, ES 
;    MOV BX, 0x3FC
;    MOV ES:[BX], int_ff
;    INC BX
;    MOV ES:[BX], 0x7C00
;    MOV AX, 0x7C00
;    MOV ES, AX
;    MOV CX, 0x0200
; main_loop:
;    MOV AH, 0x0E
;    XOR BH, BH
;    MOV AL, 0x0A
;    INT 0x10
;    MOV AL, 0x0D
;    INT 0x10
;    MOV AL, 0x5D
;    XOR DX, DX 
; byte_loop:
;    SHL DL, 0x04 
;    XOR AH, AH
;    INT 0x16
;    CALL char2nyb
;    CMP AH, 0
;    JNE test_cmd
;    ADD DL, AL
;    INC DH 
;    CMP DH, 2
;    JNE byte_loop
;    MOV BX, CX 
;    MOV ES:[BX], DL
;    INC CX 
;    JMP main_loop
; test_cmd:
;    CMP DH, 0
;    JNE bad_input
;    CMP AL, 0x2D
;    JE  offset_loop
;    CMP AL, 0x3D
;    JE  segment_loop
;    CMP AL, 0x72
;    JE do_run
;    JMP bad_input
; offset_loop:
;    XOR BX, BX 
; oloop_top:
;    SHL BX, 4
;    XOR AH, AH
;    INT 0x16
;    CALL char2nyb
;    CMP AH, 0
;    JNE bad_input
;    ADD BX, AL
;    INC DH 
;    CMP DH, 0x04
;    JNE oloop_top
;    MOV CX, BX 
;    JMP main_loop
; segment_loop:
;    XOR BX, BX     
; sloop_top:
;    SHL BX, 4
;    XOR AH, AH
;    INT 0x16
;    CALL char2nyb
;    CMP AH, 0
;    JNE bad_input
;    ADD BX, AL
;    INC DH 
;    CMP DH, 0x04
;    JNE oloop_top
;    MOV ES, BX 
;    JMP main_loop    
; do_run:
;    PUSH ES  
;    PUSH CX 
;    RET //(far return 0xCB)    
; bad_input:
;    MOV AH, 0x0E
;    XOR BH, BH
;    MOV AL, 0x0A
;    INT 0x10
;    MOV AL, 0x0D
;    INT 0x10
;    MOV AL, 0x3F
;    INT 0x10
;    JMP main_loop    
